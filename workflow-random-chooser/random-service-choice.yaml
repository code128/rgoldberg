main:
  params: [args]
  steps:
  - initArgs:
      assign:
        - jobID: args.jobID
        - startTime: args.startTime
        - intendedCharacter: args.intendedCharacter
        - characterPosition: args.characterPosition
  - initTaskVariables:
      assign:
        - project: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
        - location: ${sys.get_env("GOOGLE_CLOUD_LOCATION")}
        - queue: "testqueue"
        - taskURL: "https://somewhere.com/apiendpoint"
        - method: "POST"
        - body: "Hello world!"
  - whichService:
        call: http.get
        args:
            url: https://api.mathjs.org/v4/
            query:
                expr: ${"pickRandom(['AE','CF','CR'])"}
        result: randService            
  - serviceSelector:
        switch:
          - condition: ${randService.body == "AE"}
            next: AE_Dispatch
          - condition: ${randService.body == "CF"}
            next: CF_Dispatch
          - condition: ${randService.body == "CR"}
            next: CR_Dispatch
  - AE_Dispatch:
      assign:
        - body: "APP ENGINE!"
  - CF_Dispatch:
      assign:
        - body: "CLOUD FUNCTION!"
  - CR_Dispatch:
      assign:
        - body: "CLOUD RUN!"
  - startTask:
    try:
      call: googleapis.cloudtasks.v2.projects.locations.queues.tasks.create
      args:
        parent: ${"projects/" + project + "/locations/" + location + "/queues/" + queue}
        body:
          task:
            httpRequest:
              body: ${base64.encode(text.encode(body))}
              httpMethod: ${method}
              url: ${taskURL}
      result: taskResult
    except:
      as: e
      steps:
        - handleTasksError:
            switch:
              - condition: ${e.code == 404}
                raise: "Tasks queue not found"
              - condition: ${e.code == 403}
                raise: "Error authenticating to Cloud Tasks"
        - unhandledException:
            raise: ${e}
  - last:
      return: ${taskResult.body}