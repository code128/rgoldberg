main:
    params: [input]
    steps:
    - assign_variables:
        assign:
            - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
            - execution_id: ${sys.get_env("GOOGLE_CLOUD_WORKFLOW_EXECUTION_ID")}            
            - sentence: ${input.sentence}
            - fs_document: ${input.fs_document} 
            - character_list: []
            - return_sentence: ""                       
    - sentence_loop:
        for:
            value: x
            range: [1, '${len(sentence)}']
            steps:
                - get_executor:
                    call: get_executor
                    result: serviceChoice
                - assignVars:
                    assign:
                    - intendedCharacter: ${text.substring(sentence, x-1, x)}
                    - serviceAbbr: ${serviceChoice[1]}
                - getNewChar:
                    call: http.get
                    args:
                        url: ${serviceChoice[0]}
                        query:
                            intendedCharacter: ${intendedCharacter}
                            executionID: ${execution_id}
                    result: newChar
                - build_firestore_body:
                    assign:
                    - fieldName: ${"characterCheckNumber" + string(x)}
                    - iterationCount: ${x}
                    - body: {}                 
                    - 'body[fieldName]':
                        mapValue:
                            fields:
                            '@type':
                                stringValue: randomGuess
                            execution_id:
                                stringValue: '${execution_id}'
                            iterationCount:
                                integerValue: '${newChar.body.iterationCount}'
                            intendedCharacter:
                                stringValue: '${newChar.body.intendedCharacter}'
                            randomCharacter:
                                stringValue: '${newChar.body.randomCharacter}'
                            serviceAbbr:
                                stringValue: '${serviceAbbr}'
                - update_document:
                    call: googleapis.firestore.v1.projects.databases.documents.patch
                    args:
                        name: ${fs_document}
                        updateMask:
                            fieldPaths: ${fieldName}
                        currentDocument:
                            exists: true
                        body:
                            fields: '${body}'
                - concat:
                    assign:
                        - character_list: ${list.concat(character_list, newChar.body)}
                        - return_sentence: ${return_sentence + newChar.body.randomCharacter}
    - returnStep:
          return: ${return_sentence}

get_executor:
    steps:
        - first:
            call: http.get
            args:
                url: https://api.mathjs.org/v4/
                query:
                    expr: ${"pickRandom([1,2,3])"}
            result: randomPick
        - second:
            switch:
            - condition: ${int(randomPick.body) == 1}
              next: return_CF
            - condition:  ${int(randomPick.body) == 2}
              next: return_CR
            - condition:  ${int(randomPick.body) == 3}
              next: return_CF
        - return_AE:
            return: [https://striking-coil-320623.uc.r.appspot.com,AE]
        - return_CF:
            return: [https://us-central1-striking-coil-320623.cloudfunctions.net/random-letter,CF]
        - return_CR:
            return: [https://cr-random-letter-2itmkz3yga-uc.a.run.app/,CR]